/*
* generated by Xtext
*/
grammar InternalCqrsDSL;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.fuin.dsl.cqrs.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.fuin.dsl.cqrs.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.fuin.dsl.cqrs.services.CqrsDSLGrammarAccess;

}

@parser::members {
 
 	private CqrsDSLGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(CqrsDSLGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleDomainModel
entryRuleDomainModel 
:
{ before(grammarAccess.getDomainModelRule()); }
	 ruleDomainModel
{ after(grammarAccess.getDomainModelRule()); } 
	 EOF 
;

// Rule DomainModel
ruleDomainModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDomainModelAccess().getContextsAssignment()); }
(rule__DomainModel__ContextsAssignment)*
{ after(grammarAccess.getDomainModelAccess().getContextsAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleContext
entryRuleContext 
:
{ before(grammarAccess.getContextRule()); }
	 ruleContext
{ after(grammarAccess.getContextRule()); } 
	 EOF 
;

// Rule Context
ruleContext
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getContextAccess().getGroup()); }
(rule__Context__Group__0)
{ after(grammarAccess.getContextAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNamespace
entryRuleNamespace 
:
{ before(grammarAccess.getNamespaceRule()); }
	 ruleNamespace
{ after(grammarAccess.getNamespaceRule()); } 
	 EOF 
;

// Rule Namespace
ruleNamespace
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNamespaceAccess().getGroup()); }
(rule__Namespace__Group__0)
{ after(grammarAccess.getNamespaceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImport
entryRuleImport 
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportAccess().getGroup()); }
(rule__Import__Group__0)
{ after(grammarAccess.getImportAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAbstractElement
entryRuleAbstractElement 
:
{ before(grammarAccess.getAbstractElementRule()); }
	 ruleAbstractElement
{ after(grammarAccess.getAbstractElementRule()); } 
	 EOF 
;

// Rule AbstractElement
ruleAbstractElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAbstractElementAccess().getAlternatives()); }
(rule__AbstractElement__Alternatives)
{ after(grammarAccess.getAbstractElementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCommand
entryRuleCommand 
:
{ before(grammarAccess.getCommandRule()); }
	 ruleCommand
{ after(grammarAccess.getCommandRule()); } 
	 EOF 
;

// Rule Command
ruleCommand
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCommandAccess().getGroup()); }
(rule__Command__Group__0)
{ after(grammarAccess.getCommandAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCommandHandler
entryRuleCommandHandler 
:
{ before(grammarAccess.getCommandHandlerRule()); }
	 ruleCommandHandler
{ after(grammarAccess.getCommandHandlerRule()); } 
	 EOF 
;

// Rule CommandHandler
ruleCommandHandler
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCommandHandlerAccess().getGroup()); }
(rule__CommandHandler__Group__0)
{ after(grammarAccess.getCommandHandlerAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleProjection
entryRuleProjection 
:
{ before(grammarAccess.getProjectionRule()); }
	 ruleProjection
{ after(grammarAccess.getProjectionRule()); } 
	 EOF 
;

// Rule Projection
ruleProjection
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getProjectionAccess().getGroup()); }
(rule__Projection__Group__0)
{ after(grammarAccess.getProjectionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleView
entryRuleView 
:
{ before(grammarAccess.getViewRule()); }
	 ruleView
{ after(grammarAccess.getViewRule()); } 
	 EOF 
;

// Rule View
ruleView
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getViewAccess().getGroup()); }
(rule__View__Group__0)
{ after(grammarAccess.getViewAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypeMetaInfo
entryRuleTypeMetaInfo 
:
{ before(grammarAccess.getTypeMetaInfoRule()); }
	 ruleTypeMetaInfo
{ after(grammarAccess.getTypeMetaInfoRule()); } 
	 EOF 
;

// Rule TypeMetaInfo
ruleTypeMetaInfo
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeMetaInfoAccess().getGroup()); }
(rule__TypeMetaInfo__Group__0)
{ after(grammarAccess.getTypeMetaInfoAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariable
entryRuleVariable 
:
{ before(grammarAccess.getVariableRule()); }
	 ruleVariable
{ after(grammarAccess.getVariableRule()); } 
	 EOF 
;

// Rule Variable
ruleVariable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableAccess().getGroup()); }
(rule__Variable__Group__0)
{ after(grammarAccess.getVariableAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInvariants
entryRuleInvariants 
:
{ before(grammarAccess.getInvariantsRule()); }
	 ruleInvariants
{ after(grammarAccess.getInvariantsRule()); } 
	 EOF 
;

// Rule Invariants
ruleInvariants
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInvariantsAccess().getGroup()); }
(rule__Invariants__Group__0)
{ after(grammarAccess.getInvariantsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOverriddenTypeMetaInfo
entryRuleOverriddenTypeMetaInfo 
:
{ before(grammarAccess.getOverriddenTypeMetaInfoRule()); }
	 ruleOverriddenTypeMetaInfo
{ after(grammarAccess.getOverriddenTypeMetaInfoRule()); } 
	 EOF 
;

// Rule OverriddenTypeMetaInfo
ruleOverriddenTypeMetaInfo
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOverriddenTypeMetaInfoAccess().getGroup()); }
(rule__OverriddenTypeMetaInfo__Group__0)
{ after(grammarAccess.getOverriddenTypeMetaInfoAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstraintCall
entryRuleConstraintCall 
:
{ before(grammarAccess.getConstraintCallRule()); }
	 ruleConstraintCall
{ after(grammarAccess.getConstraintCallRule()); } 
	 EOF 
;

// Rule ConstraintCall
ruleConstraintCall
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstraintCallAccess().getGroup()); }
(rule__ConstraintCall__Group__0)
{ after(grammarAccess.getConstraintCallAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLiteral
entryRuleLiteral 
:
{ before(grammarAccess.getLiteralRule()); }
	 ruleLiteral
{ after(grammarAccess.getLiteralRule()); } 
	 EOF 
;

// Rule Literal
ruleLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLiteralAccess().getAlternatives()); }
(rule__Literal__Alternatives)
{ after(grammarAccess.getLiteralAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBooleanLiteral
entryRuleBooleanLiteral 
:
{ before(grammarAccess.getBooleanLiteralRule()); }
	 ruleBooleanLiteral
{ after(grammarAccess.getBooleanLiteralRule()); } 
	 EOF 
;

// Rule BooleanLiteral
ruleBooleanLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBooleanLiteralAccess().getGroup()); }
(rule__BooleanLiteral__Group__0)
{ after(grammarAccess.getBooleanLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNullLiteral
entryRuleNullLiteral 
:
{ before(grammarAccess.getNullLiteralRule()); }
	 ruleNullLiteral
{ after(grammarAccess.getNullLiteralRule()); } 
	 EOF 
;

// Rule NullLiteral
ruleNullLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNullLiteralAccess().getGroup()); }
(rule__NullLiteral__Group__0)
{ after(grammarAccess.getNullLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNumberLiteral
entryRuleNumberLiteral 
:
{ before(grammarAccess.getNumberLiteralRule()); }
	 ruleNumberLiteral
{ after(grammarAccess.getNumberLiteralRule()); } 
	 EOF 
;

// Rule NumberLiteral
ruleNumberLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNumberLiteralAccess().getGroup()); }
(rule__NumberLiteral__Group__0)
{ after(grammarAccess.getNumberLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStringLiteral
entryRuleStringLiteral 
:
{ before(grammarAccess.getStringLiteralRule()); }
	 ruleStringLiteral
{ after(grammarAccess.getStringLiteralRule()); } 
	 EOF 
;

// Rule StringLiteral
ruleStringLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStringLiteralAccess().getGroup()); }
(rule__StringLiteral__Group__0)
{ after(grammarAccess.getStringLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFQN
entryRuleFQN 
:
{ before(grammarAccess.getFQNRule()); }
	 ruleFQN
{ after(grammarAccess.getFQNRule()); } 
	 EOF 
;

// Rule FQN
ruleFQN
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFQNAccess().getGroup()); }
(rule__FQN__Group__0)
{ after(grammarAccess.getFQNAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFQNWithWildcard
entryRuleFQNWithWildcard 
:
{ before(grammarAccess.getFQNWithWildcardRule()); }
	 ruleFQNWithWildcard
{ after(grammarAccess.getFQNWithWildcardRule()); } 
	 EOF 
;

// Rule FQNWithWildcard
ruleFQNWithWildcard
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFQNWithWildcardAccess().getGroup()); }
(rule__FQNWithWildcard__Group__0)
{ after(grammarAccess.getFQNWithWildcardAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNumber
entryRuleNumber 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getNumberRule()); }
	 ruleNumber
{ after(grammarAccess.getNumberRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Number
ruleNumber
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNumberAccess().getAlternatives()); }
(rule__Number__Alternatives)
{ after(grammarAccess.getNumberAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}




rule__Import__ImportedNamespaceAlternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportedNamespaceFQNParserRuleCall_1_0_0()); }
	ruleFQN
{ after(grammarAccess.getImportAccess().getImportedNamespaceFQNParserRuleCall_1_0_0()); }
)

    |(
{ before(grammarAccess.getImportAccess().getImportedNamespaceFQNWithWildcardParserRuleCall_1_0_1()); }
	ruleFQNWithWildcard
{ after(grammarAccess.getImportAccess().getImportedNamespaceFQNWithWildcardParserRuleCall_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractElement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbstractElementAccess().getCommandParserRuleCall_0()); }
	ruleCommand
{ after(grammarAccess.getAbstractElementAccess().getCommandParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAbstractElementAccess().getCommandHandlerParserRuleCall_1()); }
	ruleCommandHandler
{ after(grammarAccess.getAbstractElementAccess().getCommandHandlerParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getAbstractElementAccess().getProjectionParserRuleCall_2()); }
	ruleProjection
{ after(grammarAccess.getAbstractElementAccess().getProjectionParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getAbstractElementAccess().getViewParserRuleCall_3()); }
	ruleView
{ after(grammarAccess.getAbstractElementAccess().getViewParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getNullLiteralParserRuleCall_0()); }
	ruleNullLiteral
{ after(grammarAccess.getLiteralAccess().getNullLiteralParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getBooleanLiteralParserRuleCall_1()); }
	ruleBooleanLiteral
{ after(grammarAccess.getLiteralAccess().getBooleanLiteralParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getNumberLiteralParserRuleCall_2()); }
	ruleNumberLiteral
{ after(grammarAccess.getLiteralAccess().getNumberLiteralParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getStringLiteralParserRuleCall_3()); }
	ruleStringLiteral
{ after(grammarAccess.getLiteralAccess().getStringLiteralParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__ValueAlternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanLiteralAccess().getValueFalseKeyword_1_0_0()); }

	'false' 

{ after(grammarAccess.getBooleanLiteralAccess().getValueFalseKeyword_1_0_0()); }
)

    |(
{ before(grammarAccess.getBooleanLiteralAccess().getValueTrueKeyword_1_0_1()); }

	'true' 

{ after(grammarAccess.getBooleanLiteralAccess().getValueTrueKeyword_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberAccess().getHEXTerminalRuleCall_0()); }
	RULE_HEX
{ after(grammarAccess.getNumberAccess().getHEXTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getNumberAccess().getGroup_1()); }
(rule__Number__Group_1__0)
{ after(grammarAccess.getNumberAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Alternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_0_0()); }
	RULE_INT
{ after(grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_0_0()); }
)

    |(
{ before(grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_1_0_1()); }
	RULE_DECIMAL
{ after(grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Alternatives_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_1_1_0()); }
	RULE_INT
{ after(grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_1_1_0()); }
)

    |(
{ before(grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_1_1_1_1()); }
	RULE_DECIMAL
{ after(grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Context__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Context__Group__0__Impl
	rule__Context__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Context__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContextAccess().getContextKeyword_0()); }

	'context' 

{ after(grammarAccess.getContextAccess().getContextKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Context__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Context__Group__1__Impl
	rule__Context__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Context__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContextAccess().getNameAssignment_1()); }
(rule__Context__NameAssignment_1)
{ after(grammarAccess.getContextAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Context__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Context__Group__2__Impl
	rule__Context__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Context__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContextAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getContextAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Context__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Context__Group__3__Impl
	rule__Context__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Context__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContextAccess().getNamespacesAssignment_3()); }
(rule__Context__NamespacesAssignment_3)*
{ after(grammarAccess.getContextAccess().getNamespacesAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Context__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Context__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Context__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContextAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getContextAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Namespace__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Namespace__Group__0__Impl
	rule__Namespace__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Namespace__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespaceAccess().getNamespaceKeyword_0()); }

	'namespace' 

{ after(grammarAccess.getNamespaceAccess().getNamespaceKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Namespace__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Namespace__Group__1__Impl
	rule__Namespace__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Namespace__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespaceAccess().getNameAssignment_1()); }
(rule__Namespace__NameAssignment_1)
{ after(grammarAccess.getNamespaceAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Namespace__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Namespace__Group__2__Impl
	rule__Namespace__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Namespace__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespaceAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getNamespaceAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Namespace__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Namespace__Group__3__Impl
	rule__Namespace__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Namespace__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespaceAccess().getImportsAssignment_3()); }
(rule__Namespace__ImportsAssignment_3)*
{ after(grammarAccess.getNamespaceAccess().getImportsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Namespace__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Namespace__Group__4__Impl
	rule__Namespace__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Namespace__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespaceAccess().getElementsAssignment_4()); }
(rule__Namespace__ElementsAssignment_4)*
{ after(grammarAccess.getNamespaceAccess().getElementsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Namespace__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Namespace__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Namespace__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespaceAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getNamespaceAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Import__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportKeyword_0()); }

	'import' 

{ after(grammarAccess.getImportAccess().getImportKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1()); }
(rule__Import__ImportedNamespaceAssignment_1)
{ after(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Command__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group__0__Impl
	rule__Command__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getDocAssignment_0()); }
(rule__Command__DocAssignment_0)?
{ after(grammarAccess.getCommandAccess().getDocAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group__1__Impl
	rule__Command__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getCommandKeyword_1()); }

	'command' 

{ after(grammarAccess.getCommandAccess().getCommandKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group__2__Impl
	rule__Command__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getNameAssignment_2()); }
(rule__Command__NameAssignment_2)
{ after(grammarAccess.getCommandAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group__3__Impl
	rule__Command__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getGroup_3()); }
(rule__Command__Group_3__0)?
{ after(grammarAccess.getCommandAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group__4__Impl
	rule__Command__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getLeftCurlyBracketKeyword_4()); }

	'{' 

{ after(grammarAccess.getCommandAccess().getLeftCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group__5__Impl
	rule__Command__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getVariablesAssignment_5()); }
(rule__Command__VariablesAssignment_5)*
{ after(grammarAccess.getCommandAccess().getVariablesAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group__6__Impl
	rule__Command__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getGroup_6()); }
(rule__Command__Group_6__0)?
{ after(grammarAccess.getCommandAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getRightCurlyBracketKeyword_7()); }

	'}' 

{ after(grammarAccess.getCommandAccess().getRightCurlyBracketKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__Command__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_3__0__Impl
	rule__Command__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getTargetKeyword_3_0()); }

	'target' 

{ after(grammarAccess.getCommandAccess().getTargetKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getTargetAssignment_3_1()); }
(rule__Command__TargetAssignment_3_1)
{ after(grammarAccess.getCommandAccess().getTargetAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Command__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_6__0__Impl
	rule__Command__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getMessageKeyword_6_0()); }

	'message' 

{ after(grammarAccess.getCommandAccess().getMessageKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Command__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Command__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getMessageAssignment_6_1()); }
(rule__Command__MessageAssignment_6_1)
{ after(grammarAccess.getCommandAccess().getMessageAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CommandHandler__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CommandHandler__Group__0__Impl
	rule__CommandHandler__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandHandler__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandHandlerAccess().getDocAssignment_0()); }
(rule__CommandHandler__DocAssignment_0)?
{ after(grammarAccess.getCommandHandlerAccess().getDocAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CommandHandler__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CommandHandler__Group__1__Impl
	rule__CommandHandler__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandHandler__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandHandlerAccess().getCommandHandlerKeyword_1()); }

	'command-handler' 

{ after(grammarAccess.getCommandHandlerAccess().getCommandHandlerKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CommandHandler__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CommandHandler__Group__2__Impl
	rule__CommandHandler__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandHandler__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandHandlerAccess().getNameAssignment_2()); }
(rule__CommandHandler__NameAssignment_2)
{ after(grammarAccess.getCommandHandlerAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CommandHandler__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CommandHandler__Group__3__Impl
	rule__CommandHandler__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandHandler__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandHandlerAccess().getHandlesKeyword_3()); }

	'handles' 

{ after(grammarAccess.getCommandHandlerAccess().getHandlesKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CommandHandler__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CommandHandler__Group__4__Impl
	rule__CommandHandler__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandHandler__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandHandlerAccess().getCommandsAssignment_4()); }
(rule__CommandHandler__CommandsAssignment_4)
{ after(grammarAccess.getCommandHandlerAccess().getCommandsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CommandHandler__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CommandHandler__Group__5__Impl
	rule__CommandHandler__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandHandler__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandHandlerAccess().getGroup_5()); }
(rule__CommandHandler__Group_5__0)*
{ after(grammarAccess.getCommandHandlerAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CommandHandler__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CommandHandler__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandHandler__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandHandlerAccess().getGroup_6()); }
(rule__CommandHandler__Group_6__0)?
{ after(grammarAccess.getCommandHandlerAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__CommandHandler__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CommandHandler__Group_5__0__Impl
	rule__CommandHandler__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandHandler__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandHandlerAccess().getCommaKeyword_5_0()); }

	',' 

{ after(grammarAccess.getCommandHandlerAccess().getCommaKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CommandHandler__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CommandHandler__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandHandler__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandHandlerAccess().getCommandsAssignment_5_1()); }
(rule__CommandHandler__CommandsAssignment_5_1)
{ after(grammarAccess.getCommandHandlerAccess().getCommandsAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CommandHandler__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CommandHandler__Group_6__0__Impl
	rule__CommandHandler__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandHandler__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandHandlerAccess().getUsesKeyword_6_0()); }

	'uses' 

{ after(grammarAccess.getCommandHandlerAccess().getUsesKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CommandHandler__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CommandHandler__Group_6__1__Impl
	rule__CommandHandler__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandHandler__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandHandlerAccess().getAggregatesAssignment_6_1()); }
(rule__CommandHandler__AggregatesAssignment_6_1)
{ after(grammarAccess.getCommandHandlerAccess().getAggregatesAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CommandHandler__Group_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CommandHandler__Group_6__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandHandler__Group_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandHandlerAccess().getGroup_6_2()); }
(rule__CommandHandler__Group_6_2__0)*
{ after(grammarAccess.getCommandHandlerAccess().getGroup_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__CommandHandler__Group_6_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CommandHandler__Group_6_2__0__Impl
	rule__CommandHandler__Group_6_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandHandler__Group_6_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandHandlerAccess().getCommaKeyword_6_2_0()); }

	',' 

{ after(grammarAccess.getCommandHandlerAccess().getCommaKeyword_6_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CommandHandler__Group_6_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CommandHandler__Group_6_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandHandler__Group_6_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandHandlerAccess().getAggregatesAssignment_6_2_1()); }
(rule__CommandHandler__AggregatesAssignment_6_2_1)
{ after(grammarAccess.getCommandHandlerAccess().getAggregatesAssignment_6_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Projection__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Projection__Group__0__Impl
	rule__Projection__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Projection__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProjectionAccess().getDocAssignment_0()); }
(rule__Projection__DocAssignment_0)?
{ after(grammarAccess.getProjectionAccess().getDocAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Projection__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Projection__Group__1__Impl
	rule__Projection__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Projection__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProjectionAccess().getProjectionKeyword_1()); }

	'projection' 

{ after(grammarAccess.getProjectionAccess().getProjectionKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Projection__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Projection__Group__2__Impl
	rule__Projection__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Projection__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProjectionAccess().getNameAssignment_2()); }
(rule__Projection__NameAssignment_2)
{ after(grammarAccess.getProjectionAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Projection__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Projection__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Projection__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProjectionAccess().getGroup_3()); }
(rule__Projection__Group_3__0)?
{ after(grammarAccess.getProjectionAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Projection__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Projection__Group_3__0__Impl
	rule__Projection__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Projection__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProjectionAccess().getInputKeyword_3_0()); }

	'input' 

{ after(grammarAccess.getProjectionAccess().getInputKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Projection__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Projection__Group_3__1__Impl
	rule__Projection__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Projection__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProjectionAccess().getEventsAssignment_3_1()); }
(rule__Projection__EventsAssignment_3_1)
{ after(grammarAccess.getProjectionAccess().getEventsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Projection__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Projection__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Projection__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProjectionAccess().getGroup_3_2()); }
(rule__Projection__Group_3_2__0)*
{ after(grammarAccess.getProjectionAccess().getGroup_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Projection__Group_3_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Projection__Group_3_2__0__Impl
	rule__Projection__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Projection__Group_3_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProjectionAccess().getCommaKeyword_3_2_0()); }

	',' 

{ after(grammarAccess.getProjectionAccess().getCommaKeyword_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Projection__Group_3_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Projection__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Projection__Group_3_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProjectionAccess().getEventsAssignment_3_2_1()); }
(rule__Projection__EventsAssignment_3_2_1)
{ after(grammarAccess.getProjectionAccess().getEventsAssignment_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__View__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__View__Group__0__Impl
	rule__View__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__View__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getViewAccess().getDocAssignment_0()); }
(rule__View__DocAssignment_0)?
{ after(grammarAccess.getViewAccess().getDocAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__View__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__View__Group__1__Impl
	rule__View__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__View__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getViewAccess().getViewKeyword_1()); }

	'view' 

{ after(grammarAccess.getViewAccess().getViewKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__View__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__View__Group__2__Impl
	rule__View__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__View__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getViewAccess().getNameAssignment_2()); }
(rule__View__NameAssignment_2)
{ after(grammarAccess.getViewAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__View__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__View__Group__3__Impl
	rule__View__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__View__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getViewAccess().getUsesKeyword_3()); }

	'uses' 

{ after(grammarAccess.getViewAccess().getUsesKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__View__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__View__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__View__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getViewAccess().getProjectionAssignment_4()); }
(rule__View__ProjectionAssignment_4)
{ after(grammarAccess.getViewAccess().getProjectionAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__TypeMetaInfo__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeMetaInfo__Group__0__Impl
	rule__TypeMetaInfo__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeMetaInfo__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeMetaInfoAccess().getTypeMetaInfoAction_0()); }
(

)
{ after(grammarAccess.getTypeMetaInfoAccess().getTypeMetaInfoAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeMetaInfo__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeMetaInfo__Group__1__Impl
	rule__TypeMetaInfo__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeMetaInfo__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeMetaInfoAccess().getGroup_1()); }
(rule__TypeMetaInfo__Group_1__0)?
{ after(grammarAccess.getTypeMetaInfoAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeMetaInfo__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeMetaInfo__Group__2__Impl
	rule__TypeMetaInfo__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeMetaInfo__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeMetaInfoAccess().getGroup_2()); }
(rule__TypeMetaInfo__Group_2__0)?
{ after(grammarAccess.getTypeMetaInfoAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeMetaInfo__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeMetaInfo__Group__3__Impl
	rule__TypeMetaInfo__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeMetaInfo__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeMetaInfoAccess().getGroup_3()); }
(rule__TypeMetaInfo__Group_3__0)?
{ after(grammarAccess.getTypeMetaInfoAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeMetaInfo__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeMetaInfo__Group__4__Impl
	rule__TypeMetaInfo__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeMetaInfo__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeMetaInfoAccess().getGroup_4()); }
(rule__TypeMetaInfo__Group_4__0)?
{ after(grammarAccess.getTypeMetaInfoAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeMetaInfo__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeMetaInfo__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeMetaInfo__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeMetaInfoAccess().getGroup_5()); }
(rule__TypeMetaInfo__Group_5__0)?
{ after(grammarAccess.getTypeMetaInfoAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__TypeMetaInfo__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeMetaInfo__Group_1__0__Impl
	rule__TypeMetaInfo__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeMetaInfo__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeMetaInfoAccess().getSlabelKeyword_1_0()); }

	'slabel' 

{ after(grammarAccess.getTypeMetaInfoAccess().getSlabelKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeMetaInfo__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeMetaInfo__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeMetaInfo__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeMetaInfoAccess().getSlabelAssignment_1_1()); }
(rule__TypeMetaInfo__SlabelAssignment_1_1)
{ after(grammarAccess.getTypeMetaInfoAccess().getSlabelAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypeMetaInfo__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeMetaInfo__Group_2__0__Impl
	rule__TypeMetaInfo__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeMetaInfo__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeMetaInfoAccess().getLabelKeyword_2_0()); }

	'label' 

{ after(grammarAccess.getTypeMetaInfoAccess().getLabelKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeMetaInfo__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeMetaInfo__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeMetaInfo__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeMetaInfoAccess().getLabelAssignment_2_1()); }
(rule__TypeMetaInfo__LabelAssignment_2_1)
{ after(grammarAccess.getTypeMetaInfoAccess().getLabelAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypeMetaInfo__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeMetaInfo__Group_3__0__Impl
	rule__TypeMetaInfo__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeMetaInfo__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeMetaInfoAccess().getTooltipKeyword_3_0()); }

	'tooltip' 

{ after(grammarAccess.getTypeMetaInfoAccess().getTooltipKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeMetaInfo__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeMetaInfo__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeMetaInfo__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeMetaInfoAccess().getTooltipAssignment_3_1()); }
(rule__TypeMetaInfo__TooltipAssignment_3_1)
{ after(grammarAccess.getTypeMetaInfoAccess().getTooltipAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypeMetaInfo__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeMetaInfo__Group_4__0__Impl
	rule__TypeMetaInfo__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeMetaInfo__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeMetaInfoAccess().getPromptKeyword_4_0()); }

	'prompt' 

{ after(grammarAccess.getTypeMetaInfoAccess().getPromptKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeMetaInfo__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeMetaInfo__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeMetaInfo__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeMetaInfoAccess().getPromptAssignment_4_1()); }
(rule__TypeMetaInfo__PromptAssignment_4_1)
{ after(grammarAccess.getTypeMetaInfoAccess().getPromptAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypeMetaInfo__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeMetaInfo__Group_5__0__Impl
	rule__TypeMetaInfo__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeMetaInfo__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeMetaInfoAccess().getExamplesKeyword_5_0()); }

	'examples' 

{ after(grammarAccess.getTypeMetaInfoAccess().getExamplesKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeMetaInfo__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeMetaInfo__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeMetaInfo__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeMetaInfoAccess().getExamplesAssignment_5_1()); }
(rule__TypeMetaInfo__ExamplesAssignment_5_1)*
{ after(grammarAccess.getTypeMetaInfoAccess().getExamplesAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Variable__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group__0__Impl
	rule__Variable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getDocAssignment_0()); }
(rule__Variable__DocAssignment_0)?
{ after(grammarAccess.getVariableAccess().getDocAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group__1__Impl
	rule__Variable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getNullableAssignment_1()); }
(rule__Variable__NullableAssignment_1)?
{ after(grammarAccess.getVariableAccess().getNullableAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group__2__Impl
	rule__Variable__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getTypeAssignment_2()); }
(rule__Variable__TypeAssignment_2)
{ after(grammarAccess.getVariableAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group__3__Impl
	rule__Variable__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getMultiplicityAssignment_3()); }
(rule__Variable__MultiplicityAssignment_3)?
{ after(grammarAccess.getVariableAccess().getMultiplicityAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group__4__Impl
	rule__Variable__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getNameAssignment_4()); }
(rule__Variable__NameAssignment_4)
{ after(grammarAccess.getVariableAccess().getNameAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group__5__Impl
	rule__Variable__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getInvariantsAssignment_5()); }
(rule__Variable__InvariantsAssignment_5)?
{ after(grammarAccess.getVariableAccess().getInvariantsAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getOverriddenAssignment_6()); }
(rule__Variable__OverriddenAssignment_6)?
{ after(grammarAccess.getVariableAccess().getOverriddenAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Invariants__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Invariants__Group__0__Impl
	rule__Invariants__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Invariants__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInvariantsAccess().getInvariantsKeyword_0()); }

	'invariants' 

{ after(grammarAccess.getInvariantsAccess().getInvariantsKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Invariants__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Invariants__Group__1__Impl
	rule__Invariants__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Invariants__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInvariantsAccess().getCallsAssignment_1()); }
(rule__Invariants__CallsAssignment_1)
{ after(grammarAccess.getInvariantsAccess().getCallsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Invariants__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Invariants__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Invariants__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInvariantsAccess().getGroup_2()); }
(rule__Invariants__Group_2__0)*
{ after(grammarAccess.getInvariantsAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Invariants__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Invariants__Group_2__0__Impl
	rule__Invariants__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Invariants__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInvariantsAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getInvariantsAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Invariants__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Invariants__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Invariants__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInvariantsAccess().getCallsAssignment_2_1()); }
(rule__Invariants__CallsAssignment_2_1)
{ after(grammarAccess.getInvariantsAccess().getCallsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OverriddenTypeMetaInfo__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OverriddenTypeMetaInfo__Group__0__Impl
	rule__OverriddenTypeMetaInfo__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OverriddenTypeMetaInfo__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOverriddenTypeMetaInfoAccess().getLeftCurlyBracketKeyword_0()); }

	'{' 

{ after(grammarAccess.getOverriddenTypeMetaInfoAccess().getLeftCurlyBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OverriddenTypeMetaInfo__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OverriddenTypeMetaInfo__Group__1__Impl
	rule__OverriddenTypeMetaInfo__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OverriddenTypeMetaInfo__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOverriddenTypeMetaInfoAccess().getMetaInfoAssignment_1()); }
(rule__OverriddenTypeMetaInfo__MetaInfoAssignment_1)
{ after(grammarAccess.getOverriddenTypeMetaInfoAccess().getMetaInfoAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OverriddenTypeMetaInfo__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OverriddenTypeMetaInfo__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OverriddenTypeMetaInfo__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOverriddenTypeMetaInfoAccess().getRightCurlyBracketKeyword_2()); }

	'}' 

{ after(grammarAccess.getOverriddenTypeMetaInfoAccess().getRightCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ConstraintCall__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstraintCall__Group__0__Impl
	rule__ConstraintCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintCall__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintCallAccess().getConstraintAssignment_0()); }
(rule__ConstraintCall__ConstraintAssignment_0)
{ after(grammarAccess.getConstraintCallAccess().getConstraintAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstraintCall__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstraintCall__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintCall__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintCallAccess().getGroup_1()); }
(rule__ConstraintCall__Group_1__0)?
{ after(grammarAccess.getConstraintCallAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConstraintCall__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstraintCall__Group_1__0__Impl
	rule__ConstraintCall__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintCall__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintCallAccess().getLeftParenthesisKeyword_1_0()); }

	'(' 

{ after(grammarAccess.getConstraintCallAccess().getLeftParenthesisKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstraintCall__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstraintCall__Group_1__1__Impl
	rule__ConstraintCall__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintCall__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintCallAccess().getParamsAssignment_1_1()); }
(rule__ConstraintCall__ParamsAssignment_1_1)
{ after(grammarAccess.getConstraintCallAccess().getParamsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstraintCall__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstraintCall__Group_1__2__Impl
	rule__ConstraintCall__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintCall__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintCallAccess().getGroup_1_2()); }
(rule__ConstraintCall__Group_1_2__0)*
{ after(grammarAccess.getConstraintCallAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstraintCall__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstraintCall__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintCall__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintCallAccess().getRightParenthesisKeyword_1_3()); }

	')' 

{ after(grammarAccess.getConstraintCallAccess().getRightParenthesisKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ConstraintCall__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstraintCall__Group_1_2__0__Impl
	rule__ConstraintCall__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintCall__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintCallAccess().getCommaKeyword_1_2_0()); }

	',' 

{ after(grammarAccess.getConstraintCallAccess().getCommaKeyword_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstraintCall__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstraintCall__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintCall__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintCallAccess().getParamsAssignment_1_2_1()); }
(rule__ConstraintCall__ParamsAssignment_1_2_1)
{ after(grammarAccess.getConstraintCallAccess().getParamsAssignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BooleanLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanLiteral__Group__0__Impl
	rule__BooleanLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanLiteralAccess().getBooleanLiteralAction_0()); }
(

)
{ after(grammarAccess.getBooleanLiteralAccess().getBooleanLiteralAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanLiteralAccess().getValueAssignment_1()); }
(rule__BooleanLiteral__ValueAssignment_1)
{ after(grammarAccess.getBooleanLiteralAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NullLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NullLiteral__Group__0__Impl
	rule__NullLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NullLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNullLiteralAccess().getNullLiteralAction_0()); }
(

)
{ after(grammarAccess.getNullLiteralAccess().getNullLiteralAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NullLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NullLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NullLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNullLiteralAccess().getValueAssignment_1()); }
(rule__NullLiteral__ValueAssignment_1)
{ after(grammarAccess.getNullLiteralAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NumberLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NumberLiteral__Group__0__Impl
	rule__NumberLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberLiteralAccess().getNumberLiteralAction_0()); }
(

)
{ after(grammarAccess.getNumberLiteralAccess().getNumberLiteralAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NumberLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NumberLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberLiteralAccess().getValueAssignment_1()); }
(rule__NumberLiteral__ValueAssignment_1)
{ after(grammarAccess.getNumberLiteralAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StringLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringLiteral__Group__0__Impl
	rule__StringLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringLiteralAccess().getStringLiteralAction_0()); }
(

)
{ after(grammarAccess.getStringLiteralAccess().getStringLiteralAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringLiteralAccess().getValueAssignment_1()); }
(rule__StringLiteral__ValueAssignment_1)
{ after(grammarAccess.getStringLiteralAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FQN__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FQN__Group__0__Impl
	rule__FQN__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFQNAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getFQNAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FQN__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FQN__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFQNAccess().getGroup_1()); }
(rule__FQN__Group_1__0)*
{ after(grammarAccess.getFQNAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FQN__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FQN__Group_1__0__Impl
	rule__FQN__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFQNAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getFQNAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FQN__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FQN__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFQNAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getFQNAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FQNWithWildcard__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FQNWithWildcard__Group__0__Impl
	rule__FQNWithWildcard__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FQNWithWildcard__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFQNWithWildcardAccess().getFQNParserRuleCall_0()); }
	ruleFQN
{ after(grammarAccess.getFQNWithWildcardAccess().getFQNParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FQNWithWildcard__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FQNWithWildcard__Group__1__Impl
	rule__FQNWithWildcard__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FQNWithWildcard__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFQNWithWildcardAccess().getFullStopKeyword_1()); }

	'.' 

{ after(grammarAccess.getFQNWithWildcardAccess().getFullStopKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FQNWithWildcard__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FQNWithWildcard__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FQNWithWildcard__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFQNWithWildcardAccess().getAsteriskKeyword_2()); }

	'*' 

{ after(grammarAccess.getFQNWithWildcardAccess().getAsteriskKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Number__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Number__Group_1__0__Impl
	rule__Number__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberAccess().getAlternatives_1_0()); }
(rule__Number__Alternatives_1_0)
{ after(grammarAccess.getNumberAccess().getAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Number__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Number__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberAccess().getGroup_1_1()); }
(rule__Number__Group_1_1__0)?
{ after(grammarAccess.getNumberAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Number__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Number__Group_1_1__0__Impl
	rule__Number__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberAccess().getFullStopKeyword_1_1_0()); }

	'.' 

{ after(grammarAccess.getNumberAccess().getFullStopKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Number__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Number__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberAccess().getAlternatives_1_1_1()); }
(rule__Number__Alternatives_1_1_1)
{ after(grammarAccess.getNumberAccess().getAlternatives_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__DomainModel__ContextsAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainModelAccess().getContextsContextParserRuleCall_0()); }
	ruleContext{ after(grammarAccess.getDomainModelAccess().getContextsContextParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Context__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContextAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getContextAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Context__NamespacesAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContextAccess().getNamespacesNamespaceParserRuleCall_3_0()); }
	ruleNamespace{ after(grammarAccess.getContextAccess().getNamespacesNamespaceParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Namespace__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespaceAccess().getNameFQNParserRuleCall_1_0()); }
	ruleFQN{ after(grammarAccess.getNamespaceAccess().getNameFQNParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Namespace__ImportsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespaceAccess().getImportsImportParserRuleCall_3_0()); }
	ruleImport{ after(grammarAccess.getNamespaceAccess().getImportsImportParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Namespace__ElementsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespaceAccess().getElementsAbstractElementParserRuleCall_4_0()); }
	ruleAbstractElement{ after(grammarAccess.getNamespaceAccess().getElementsAbstractElementParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Import__ImportedNamespaceAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportedNamespaceAlternatives_1_0()); }
(rule__Import__ImportedNamespaceAlternatives_1_0)
{ after(grammarAccess.getImportAccess().getImportedNamespaceAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Command__DocAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getDocDOCTerminalRuleCall_0_0()); }
	RULE_DOC{ after(grammarAccess.getCommandAccess().getDocDOCTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Command__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getCommandAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Command__TargetAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getTargetAbstractMethodCrossReference_3_1_0()); }
(
{ before(grammarAccess.getCommandAccess().getTargetAbstractMethodFQNParserRuleCall_3_1_0_1()); }
	ruleFQN{ after(grammarAccess.getCommandAccess().getTargetAbstractMethodFQNParserRuleCall_3_1_0_1()); }
)
{ after(grammarAccess.getCommandAccess().getTargetAbstractMethodCrossReference_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Command__VariablesAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getVariablesVariableParserRuleCall_5_0()); }
	ruleVariable{ after(grammarAccess.getCommandAccess().getVariablesVariableParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Command__MessageAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandAccess().getMessageSTRINGTerminalRuleCall_6_1_0()); }
	RULE_STRING{ after(grammarAccess.getCommandAccess().getMessageSTRINGTerminalRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CommandHandler__DocAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandHandlerAccess().getDocDOCTerminalRuleCall_0_0()); }
	RULE_DOC{ after(grammarAccess.getCommandHandlerAccess().getDocDOCTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CommandHandler__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandHandlerAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getCommandHandlerAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CommandHandler__CommandsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandHandlerAccess().getCommandsCommandCrossReference_4_0()); }
(
{ before(grammarAccess.getCommandHandlerAccess().getCommandsCommandIDTerminalRuleCall_4_0_1()); }
	RULE_ID{ after(grammarAccess.getCommandHandlerAccess().getCommandsCommandIDTerminalRuleCall_4_0_1()); }
)
{ after(grammarAccess.getCommandHandlerAccess().getCommandsCommandCrossReference_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CommandHandler__CommandsAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandHandlerAccess().getCommandsCommandCrossReference_5_1_0()); }
(
{ before(grammarAccess.getCommandHandlerAccess().getCommandsCommandIDTerminalRuleCall_5_1_0_1()); }
	RULE_ID{ after(grammarAccess.getCommandHandlerAccess().getCommandsCommandIDTerminalRuleCall_5_1_0_1()); }
)
{ after(grammarAccess.getCommandHandlerAccess().getCommandsCommandCrossReference_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CommandHandler__AggregatesAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandHandlerAccess().getAggregatesAggregateCrossReference_6_1_0()); }
(
{ before(grammarAccess.getCommandHandlerAccess().getAggregatesAggregateFQNParserRuleCall_6_1_0_1()); }
	ruleFQN{ after(grammarAccess.getCommandHandlerAccess().getAggregatesAggregateFQNParserRuleCall_6_1_0_1()); }
)
{ after(grammarAccess.getCommandHandlerAccess().getAggregatesAggregateCrossReference_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CommandHandler__AggregatesAssignment_6_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommandHandlerAccess().getAggregatesAggregateCrossReference_6_2_1_0()); }
(
{ before(grammarAccess.getCommandHandlerAccess().getAggregatesAggregateFQNParserRuleCall_6_2_1_0_1()); }
	ruleFQN{ after(grammarAccess.getCommandHandlerAccess().getAggregatesAggregateFQNParserRuleCall_6_2_1_0_1()); }
)
{ after(grammarAccess.getCommandHandlerAccess().getAggregatesAggregateCrossReference_6_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Projection__DocAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProjectionAccess().getDocDOCTerminalRuleCall_0_0()); }
	RULE_DOC{ after(grammarAccess.getProjectionAccess().getDocDOCTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Projection__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProjectionAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getProjectionAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Projection__EventsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProjectionAccess().getEventsEventCrossReference_3_1_0()); }
(
{ before(grammarAccess.getProjectionAccess().getEventsEventFQNParserRuleCall_3_1_0_1()); }
	ruleFQN{ after(grammarAccess.getProjectionAccess().getEventsEventFQNParserRuleCall_3_1_0_1()); }
)
{ after(grammarAccess.getProjectionAccess().getEventsEventCrossReference_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Projection__EventsAssignment_3_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProjectionAccess().getEventsEventCrossReference_3_2_1_0()); }
(
{ before(grammarAccess.getProjectionAccess().getEventsEventFQNParserRuleCall_3_2_1_0_1()); }
	ruleFQN{ after(grammarAccess.getProjectionAccess().getEventsEventFQNParserRuleCall_3_2_1_0_1()); }
)
{ after(grammarAccess.getProjectionAccess().getEventsEventCrossReference_3_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__View__DocAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getViewAccess().getDocDOCTerminalRuleCall_0_0()); }
	RULE_DOC{ after(grammarAccess.getViewAccess().getDocDOCTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__View__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getViewAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getViewAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__View__ProjectionAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getViewAccess().getProjectionProjectionCrossReference_4_0()); }
(
{ before(grammarAccess.getViewAccess().getProjectionProjectionIDTerminalRuleCall_4_0_1()); }
	RULE_ID{ after(grammarAccess.getViewAccess().getProjectionProjectionIDTerminalRuleCall_4_0_1()); }
)
{ after(grammarAccess.getViewAccess().getProjectionProjectionCrossReference_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeMetaInfo__SlabelAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeMetaInfoAccess().getSlabelSTRINGTerminalRuleCall_1_1_0()); }
	RULE_STRING{ after(grammarAccess.getTypeMetaInfoAccess().getSlabelSTRINGTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeMetaInfo__LabelAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeMetaInfoAccess().getLabelSTRINGTerminalRuleCall_2_1_0()); }
	RULE_STRING{ after(grammarAccess.getTypeMetaInfoAccess().getLabelSTRINGTerminalRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeMetaInfo__TooltipAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeMetaInfoAccess().getTooltipSTRINGTerminalRuleCall_3_1_0()); }
	RULE_STRING{ after(grammarAccess.getTypeMetaInfoAccess().getTooltipSTRINGTerminalRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeMetaInfo__PromptAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeMetaInfoAccess().getPromptSTRINGTerminalRuleCall_4_1_0()); }
	RULE_STRING{ after(grammarAccess.getTypeMetaInfoAccess().getPromptSTRINGTerminalRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeMetaInfo__ExamplesAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeMetaInfoAccess().getExamplesLiteralParserRuleCall_5_1_0()); }
	ruleLiteral{ after(grammarAccess.getTypeMetaInfoAccess().getExamplesLiteralParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__DocAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getDocDOCTerminalRuleCall_0_0()); }
	RULE_DOC{ after(grammarAccess.getVariableAccess().getDocDOCTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__NullableAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getNullableNullableKeyword_1_0()); }
(
{ before(grammarAccess.getVariableAccess().getNullableNullableKeyword_1_0()); }

	'nullable' 

{ after(grammarAccess.getVariableAccess().getNullableNullableKeyword_1_0()); }
)

{ after(grammarAccess.getVariableAccess().getNullableNullableKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getTypeTypeCrossReference_2_0()); }
(
{ before(grammarAccess.getVariableAccess().getTypeTypeIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getVariableAccess().getTypeTypeIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getVariableAccess().getTypeTypeCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__MultiplicityAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getMultiplicityAsteriskKeyword_3_0()); }
(
{ before(grammarAccess.getVariableAccess().getMultiplicityAsteriskKeyword_3_0()); }

	'*' 

{ after(grammarAccess.getVariableAccess().getMultiplicityAsteriskKeyword_3_0()); }
)

{ after(grammarAccess.getVariableAccess().getMultiplicityAsteriskKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__NameAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_4_0()); }
	RULE_ID{ after(grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__InvariantsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getInvariantsInvariantsParserRuleCall_5_0()); }
	ruleInvariants{ after(grammarAccess.getVariableAccess().getInvariantsInvariantsParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__OverriddenAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getOverriddenOverriddenTypeMetaInfoParserRuleCall_6_0()); }
	ruleOverriddenTypeMetaInfo{ after(grammarAccess.getVariableAccess().getOverriddenOverriddenTypeMetaInfoParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Invariants__CallsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInvariantsAccess().getCallsConstraintCallParserRuleCall_1_0()); }
	ruleConstraintCall{ after(grammarAccess.getInvariantsAccess().getCallsConstraintCallParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Invariants__CallsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInvariantsAccess().getCallsConstraintCallParserRuleCall_2_1_0()); }
	ruleConstraintCall{ after(grammarAccess.getInvariantsAccess().getCallsConstraintCallParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OverriddenTypeMetaInfo__MetaInfoAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOverriddenTypeMetaInfoAccess().getMetaInfoTypeMetaInfoParserRuleCall_1_0()); }
	ruleTypeMetaInfo{ after(grammarAccess.getOverriddenTypeMetaInfoAccess().getMetaInfoTypeMetaInfoParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintCall__ConstraintAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintCallAccess().getConstraintConstraintCrossReference_0_0()); }
(
{ before(grammarAccess.getConstraintCallAccess().getConstraintConstraintIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getConstraintCallAccess().getConstraintConstraintIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getConstraintCallAccess().getConstraintConstraintCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintCall__ParamsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintCallAccess().getParamsLiteralParserRuleCall_1_1_0()); }
	ruleLiteral{ after(grammarAccess.getConstraintCallAccess().getParamsLiteralParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintCall__ParamsAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintCallAccess().getParamsLiteralParserRuleCall_1_2_1_0()); }
	ruleLiteral{ after(grammarAccess.getConstraintCallAccess().getParamsLiteralParserRuleCall_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanLiteralAccess().getValueAlternatives_1_0()); }
(rule__BooleanLiteral__ValueAlternatives_1_0)
{ after(grammarAccess.getBooleanLiteralAccess().getValueAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NullLiteral__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNullLiteralAccess().getValueNullKeyword_1_0()); }
(
{ before(grammarAccess.getNullLiteralAccess().getValueNullKeyword_1_0()); }

	'null' 

{ after(grammarAccess.getNullLiteralAccess().getValueNullKeyword_1_0()); }
)

{ after(grammarAccess.getNullLiteralAccess().getValueNullKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NumberLiteral__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberLiteralAccess().getValueNumberParserRuleCall_1_0()); }
	ruleNumber{ after(grammarAccess.getNumberLiteralAccess().getValueNumberParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteral__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringLiteralAccess().getValueSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getStringLiteralAccess().getValueSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : ('A'..'Z'|'a'..'z') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_HEX : ('0x'|'0X') ('0'..'9'|'a'..'f'|'A'..'F'|'_')+ ('#' (('b'|'B') ('i'|'I')|('l'|'L')))?;

RULE_INT : '0'..'9' ('0'..'9'|'_')*;

RULE_DECIMAL : RULE_INT (('e'|'E') ('+'|'-')? RULE_INT)? (('b'|'B') ('i'|'I'|'d'|'D')|('l'|'L'|'d'|'D'|'f'|'F'))?;

RULE_DOC : '/**' ( options {greedy=false;} : . )*'*/';

RULE_ML_COMMENT : '/*' ~('*') ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;


